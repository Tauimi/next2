'use client';

import { useState } from 'react';

export default function SetupPage() {
  const [isLoading, setIsLoading] = useState(false);
  const [result, setResult] = useState<any>(null);
  const [error, setError] = useState<string>('');

  const handleSetup = async () => {
    setIsLoading(true);
    setError('');
    setResult(null);

    try {
      const response = await fetch('/api/setup-complete', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
      });

      const data = await response.json();

      if (data.success) {
        setResult(data);
      } else {
        setError(data.error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      console.error('Setup error:', err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 flex items-center justify-center p-4">
      <div className="max-w-2xl w-full bg-white rounded-lg shadow-lg p-8">
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-4">
            üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö TechnoMart
          </h1>
          <p className="text-gray-600">
            –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          </p>
        </div>

        {/* –ö–Ω–æ–ø–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ */}
        <div className="text-center mb-8">
          <button
            onClick={handleSetup}
            disabled={isLoading}
            className={`px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-200 ${
              isLoading
                ? 'bg-gray-400 cursor-not-allowed'
                : 'bg-blue-600 hover:bg-blue-700 active:bg-blue-800'
            } text-white shadow-lg hover:shadow-xl transform hover:-translate-y-1`}
          >
            {isLoading ? (
              <div className="flex items-center">
                <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3"></div>
                –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...
              </div>
            ) : (
              'üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö'
            )}
          </button>
        </div>

        {/* –û—à–∏–±–∫–∞ */}
        {error && (
          <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
            <div className="flex">
              <div className="ml-3">
                <h3 className="text-sm font-medium text-red-800">
                  ‚ùå –û—à–∏–±–∫–∞
                </h3>
                <div className="mt-2 text-sm text-red-700">
                  {error}
                </div>
              </div>
            </div>
          </div>
        )}

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        {result && (
          <div className="bg-green-50 border border-green-200 rounded-lg p-6">
            <div className="flex">
              <div className="ml-3 w-full">
                <h3 className="text-lg font-medium text-green-800 mb-4">
                  ‚úÖ {result.message}
                </h3>
                
                {/* –®–∞–≥–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è */}
                <div className="mb-4">
                  <h4 className="font-semibold text-green-800 mb-2">–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —à–∞–≥–∏:</h4>
                  <ul className="space-y-1">
                    {result.steps?.map((step: string, index: number) => (
                      <li key={index} className="text-sm text-green-700 flex items-center">
                        <span className="mr-2">‚Ä¢</span>
                        {step}
                      </li>
                    ))}
                  </ul>
                </div>

                {/* –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
                <div className="bg-white rounded border border-green-300 p-4 mb-4">
                  <h4 className="font-semibold text-green-800 mb-3">üîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:</h4>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="bg-blue-50 p-3 rounded">
                      <h5 className="font-medium text-blue-800">üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä</h5>
                      <p className="text-sm text-blue-700 mt-1">
                        <strong>Email:</strong> {result.login?.email}<br/>
                        <strong>–ü–∞—Ä–æ–ª—å:</strong> {result.login?.password}
                      </p>
                    </div>
                    <div className="bg-gray-50 p-3 rounded">
                      <h5 className="font-medium text-gray-800">üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h5>
                      <p className="text-sm text-gray-700 mt-1">
                        <strong>Email:</strong> user@technomart.ru<br/>
                        <strong>–ü–∞—Ä–æ–ª—å:</strong> User123!
                      </p>
                    </div>
                  </div>
                </div>

                {/* –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ */}
                <div className="mb-4">
                  <h4 className="font-semibold text-green-800 mb-2">–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:</h4>
                  <ol className="space-y-1">
                    {result.nextSteps?.map((step: string, index: number) => (
                      <li key={index} className="text-sm text-green-700 flex items-start">
                        <span className="mr-2 font-medium">{index + 1}.</span>
                        {step}
                      </li>
                    ))}
                  </ol>
                </div>

                {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
                <div className="flex flex-wrap gap-3 mt-6">
                  <a
                    href="/"
                    className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
                  >
                    üè† –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                  </a>
                  <a
                    href="/auth/login"
                    className="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
                  >
                    üîê –í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É
                  </a>
                  <a
                    href="/admin"
                    className="bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg font-medium transition-colors"
                  >
                    ‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                  </a>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-8 p-4 bg-blue-50 rounded-lg">
          <h3 className="text-sm font-medium text-blue-800 mb-2">
            ‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
          </h3>
          <ul className="text-sm text-blue-700 space-y-1">
            <li>‚Ä¢ –≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ–∑–¥–∞—Å—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</li>
            <li>‚Ä¢ –ë—É–¥—É—Ç —Å–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ —Ç–æ–≤–∞—Ä—ã</li>
            <li>‚Ä¢ –û–ø–µ—Ä–∞—Ü–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–∞ –∏ –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑</li>
            <li>‚Ä¢ –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–∞–π—Ç</li>
          </ul>
        </div>
      </div>
    </div>
  );
} 